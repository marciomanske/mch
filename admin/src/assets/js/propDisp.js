/**
 * Created by americojunior on 26/12/16.
 */
// the GROUPS variable below is an array of objects which would normally be generated by a webservice but you can edit it here to change what gets generated when the page loads
var GROUPS = [{
    name: "ano",
    start: 1,
    end: 12,
    digits: 2,
    rows: [{
        name: "Mês",
        status: [2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2]
    }, {
        name: "Domingo",
        status: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    },{
        name: "Segunda",
        status: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    },{
        name: "Terça",
        status: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    },{
        name: "Quarta",
        status: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    },{
        name: "Quinta",
        status: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    },{
        name: "Sexta",
        status: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    }, {
        name: "Sábado",
        status: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
    }]
}];

// the following code will dynamically generate the HTML on the page using the GROUPS object defined above

$('document').ready(function() {
    $('#group_list').html(getPageHTML(GROUPS));
    initEvents();
});

function getPageHTML(g) {
    var h = '';
    for (var i = 0; i < g.length; i++) {
        h += getGroupHTML(g[i]);
    }
    return h;
}

function getGroupHTML(g) {
    var h = '';
    h += '<table class="group-card">';
    h += '<tr>';
    h += '<td class="group-name">' + g.name + '</td>';
    for (var i = g.start; i <= g.end; i++) {
        h += '<td class="header column-header" data-col="' + i + '">' + ("00000" + i).slice(-g.digits) + '</td>';
    }
    h += '</tr>';
    for (var j = 0; j < g.rows.length; j++) {
        h += '<tr>';
        h += '<td class="header row-header">' + g.rows[j].name + '</td>';
        for (var k = g.start; k <= g.end; k++) {
            h += '<td class="node status-' + g.rows[j].status[k - 1] + '" data-col="' + k + '">&nbsp;</td>';
        }
        h += '</tr>';
    }
    h += '</table>';
    return h;
}

// initialize event handlers
function initEvents() {
    var selectNodes = function(a, s) {
        if (a.length === s.length) {
            a.removeClass("selected");
        } else {
            a.addClass("selected");
        }
    };

    // if the group name is clicked then select everything in the group
    $(".group-name").click(function() {
        selectNodes(
            $(this).parent().parent().find(".node"),
            $(this).parent().parent().find(".node.selected")
        );
    });

    // if row-header is clicked then select everything in the row
    $(".row-header").click(function() {
        selectNodes(
            $(this).parent().find(".node"),
            $(this).parent().find(".node.selected")
        );
    });

    // if column-header is clicked then select everything in the column
    $(".column-header").click(function() {
        var c = $(this).index();
        selectNodes(
            $(this).closest("table").find("tr td:nth-child(" + (c + 1) + ").node"),
            $(this).closest("table").find("tr td:nth-child(" + (c + 1) + ").node.selected")
        );
    });
}

// the code below is a simple jquery drag selection algorithm which operates on all elements with class "node"
$(function() {
    var pauseEvent = function(e) {
        if (e.stopPropagation) e.stopPropagation();
        if (e.preventDefault) e.preventDefault();
        e.cancelBubble = true;
        e.returnValue = false;
        return false;
    }

    var isDragging = false;
    var isSelecting = false;

    $(".node")
        .mousedown(function(e) {
            pauseEvent(e);
            $(e.target).toggleClass('selected');
            $(window).mousemove(function(evt) {
                isDragging = true;
                if ($(evt.target).hasClass('selected')) {
                    isSelecting = false;
                    $(evt.target).addClass('selected');
                } else {
                    isSelecting = true;
                    $(evt.target).removeClass('selected');
                }
                $(window).unbind("mousemove");
            });
        })
        .mouseup(function() {
            var wasDragging = isDragging;
            isDragging = false;
            isSelecting = false;
            $(window).unbind("mousemove");
        })
        .mouseover(function(e) {
            if (isDragging) {
                if (isSelecting) {
                    $(this).removeClass('selected');
                } else {
                    $(this).addClass('selected');
                }
            }
        });
});

